syntax = "proto3";

package identity.identity;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "identity/identity/params.proto";
import "identity/identity/user.proto";
import "identity/identity/address.proto";

option go_package = "identity/x/identity/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams  (MsgUpdateParams ) returns (MsgUpdateParamsResponse );
  rpc CreateUser    (MsgCreateUser   ) returns (MsgCreateUserResponse   );
  rpc UpdateUser    (MsgUpdateUser   ) returns (MsgUpdateUserResponse   );
  rpc DeleteUser    (MsgDeleteUser   ) returns (MsgDeleteUserResponse   );
  rpc CreateAddress (MsgCreateAddress) returns (MsgCreateAddressResponse);
  rpc UpdateAddress (MsgUpdateAddress) returns (MsgUpdateAddressResponse);
  rpc DeleteAddress (MsgDeleteAddress) returns (MsgDeleteAddressResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                           "authority";
  option           (amino.name) = "identity/x/identity/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string did     = 2;
  string hash    = 3;
  string owner   = 4;
}

message MsgCreateUserResponse {}

message MsgUpdateUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string did     = 2;
  string hash    = 3;
  string owner   = 4;
}

message MsgUpdateUserResponse {}

message MsgDeleteUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string did     = 2;
}

message MsgDeleteUserResponse {}

message MsgCreateAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string owner   = 2;
}

message MsgCreateAddressResponse {}

message MsgUpdateAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string owner   = 2;
}

message MsgUpdateAddressResponse {}

message MsgDeleteAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string owner   = 2;
}

message MsgDeleteAddressResponse {}

